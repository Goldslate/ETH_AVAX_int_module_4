/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Aval_20, Aval_20Interface } from "../Aval_20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "addItems",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "itemName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct aval_20.items[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "itemID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reciever",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "redeemToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "redeem_items",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "itemName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reciever",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260006003553480156200001657600080fd5b5060405162001df638038062001df683398181016040528101906200003c9190620002a1565b82600190816200004d919062000586565b5081600290816200005f919062000586565b50806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200066d565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200011282620000c7565b810181811067ffffffffffffffff82111715620001345762000133620000d8565b5b80604052505050565b600062000149620000a9565b905062000157828262000107565b919050565b600067ffffffffffffffff8211156200017a5762000179620000d8565b5b6200018582620000c7565b9050602081019050919050565b60005b83811015620001b257808201518184015260208101905062000195565b60008484015250505050565b6000620001d5620001cf846200015c565b6200013d565b905082815260208101848484011115620001f457620001f3620000c2565b5b6200020184828562000192565b509392505050565b600082601f830112620002215762000220620000bd565b5b815162000233848260208601620001be565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000269826200023c565b9050919050565b6200027b816200025c565b81146200028757600080fd5b50565b6000815190506200029b8162000270565b92915050565b600080600060608486031215620002bd57620002bc620000b3565b5b600084015167ffffffffffffffff811115620002de57620002dd620000b8565b5b620002ec8682870162000209565b935050602084015167ffffffffffffffff81111562000310576200030f620000b8565b5b6200031e8682870162000209565b925050604062000331868287016200028a565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038e57607f821691505b602082108103620003a457620003a362000346565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200040e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003cf565b6200041a8683620003cf565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000467620004616200045b8462000432565b6200043c565b62000432565b9050919050565b6000819050919050565b620004838362000446565b6200049b62000492826200046e565b848454620003dc565b825550505050565b600090565b620004b2620004a3565b620004bf81848462000478565b505050565b5b81811015620004e757620004db600082620004a8565b600181019050620004c5565b5050565b601f82111562000536576200050081620003aa565b6200050b84620003bf565b810160208510156200051b578190505b620005336200052a85620003bf565b830182620004c4565b50505b505050565b600082821c905092915050565b60006200055b600019846008026200053b565b1980831691505092915050565b600062000576838362000548565b9150826002028217905092915050565b62000591826200033b565b67ffffffffffffffff811115620005ad57620005ac620000d8565b5b620005b9825462000375565b620005c6828285620004eb565b600060209050601f831160018114620005fe5760008415620005e9578287015190505b620005f5858262000568565b86555062000665565b601f1984166200060e86620003aa565b60005b82811015620006385784890151825560018201915060208501945060208101905062000611565b8683101562000658578489015162000654601f89168262000548565b8355505b6001600288020188555050505b505050505050565b611779806200067d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806342966c681161008c5780638da5cb5b116100665780638da5cb5b1461023957806395d89b4114610257578063a9059cbb14610275578063f8b2cb4f14610291576100ea565b806342966c68146101cd57806343cdef60146101e957806376b655f514610207576100ea565b806318160ddd116100c857806318160ddd1461014557806327e235e31461016357806340c10f1914610193578063410d59cc146101af576100ea565b8063013054c2146100ef57806306fdde031461010b57806307c4733a14610129575b600080fd5b61010960048036038101906101049190610c49565b6102c1565b005b61011361043e565b6040516101209190610d06565b60405180910390f35b610143600480360381019061013e9190610e5d565b6104cc565b005b61014d6105f2565b60405161015a9190610ec8565b60405180910390f35b61017d60048036038101906101789190610f41565b6105f8565b60405161018a9190610ec8565b60405180910390f35b6101ad60048036038101906101a89190610f6e565b610610565b005b6101b7610711565b6040516101c49190611119565b60405180910390f35b6101e760048036038101906101e29190610c49565b610816565b005b6101f161090a565b6040516101fe9190610ec8565b60405180910390f35b610221600480360381019061021c9190610c49565b610910565b6040516102309392919061113b565b60405180910390f35b6102416109d2565b60405161024e9190611188565b60405180910390f35b61025f6109f6565b60405161026c9190610d06565b60405180910390f35b61028f600480360381019061028a9190610f6e565b610a84565b005b6102ab60048036038101906102a69190610f41565b610bb6565b6040516102b89190610ec8565b60405180910390f35b6000600582815481106102d7576102d66111a3565b5b906000526020600020906003020160020154905080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561036d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103649061121e565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103bc919061126d565b9250508190555080600460008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461043391906112a1565b925050819055505050565b6001805461044b90611304565b80601f016020809104026020016040519081016040528092919081815260200182805461047790611304565b80156104c45780601f10610499576101008083540402835291602001916104c4565b820191906000526020600020905b8154815290600101906020018083116104a757829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461055a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055190611381565b60405180910390fd5b60006040518060600160405280600354815260200184815260200183815250905060058190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190816105c6919061154d565b506040820151816002015550506001600360008282546105e691906112a1565b92505081905550505050565b60065481565b60046020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069590611381565b60405180910390fd5b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106ed91906112a1565b92505081905550806006600082825461070691906112a1565b925050819055505050565b60606005805480602002602001604051908101604052809291908181526020016000905b8282101561080d57838290600052602060002090600302016040518060600160405290816000820154815260200160018201805461077290611304565b80601f016020809104026020016040519081016040528092919081815260200182805461079e90611304565b80156107eb5780601f106107c0576101008083540402835291602001916107eb565b820191906000526020600020905b8154815290600101906020018083116107ce57829003601f168201915b5050505050815260200160028201548152505081526020019060010190610735565b50505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f90611691565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108e7919061126d565b925050819055508060066000828254610900919061126d565b9250508190555050565b60035481565b6005818154811061092057600080fd5b906000526020600020906003020160009150905080600001549080600101805461094990611304565b80601f016020809104026020016040519081016040528092919081815260200182805461097590611304565b80156109c25780601f10610997576101008083540402835291602001916109c2565b820191906000526020600020905b8154815290600101906020018083116109a557829003601f168201915b5050505050908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028054610a0390611304565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2f90611304565b8015610a7c5780601f10610a5157610100808354040283529160200191610a7c565b820191906000526020600020905b815481529060010190602001808311610a5f57829003601f168201915b505050505081565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd90611723565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b55919061126d565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bab91906112a1565b925050819055505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610c2681610c13565b8114610c3157600080fd5b50565b600081359050610c4381610c1d565b92915050565b600060208284031215610c5f57610c5e610c09565b5b6000610c6d84828501610c34565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cb0578082015181840152602081019050610c95565b60008484015250505050565b6000601f19601f8301169050919050565b6000610cd882610c76565b610ce28185610c81565b9350610cf2818560208601610c92565b610cfb81610cbc565b840191505092915050565b60006020820190508181036000830152610d208184610ccd565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d6a82610cbc565b810181811067ffffffffffffffff82111715610d8957610d88610d32565b5b80604052505050565b6000610d9c610bff565b9050610da88282610d61565b919050565b600067ffffffffffffffff821115610dc857610dc7610d32565b5b610dd182610cbc565b9050602081019050919050565b82818337600083830152505050565b6000610e00610dfb84610dad565b610d92565b905082815260208101848484011115610e1c57610e1b610d2d565b5b610e27848285610dde565b509392505050565b600082601f830112610e4457610e43610d28565b5b8135610e54848260208601610ded565b91505092915050565b60008060408385031215610e7457610e73610c09565b5b600083013567ffffffffffffffff811115610e9257610e91610c0e565b5b610e9e85828601610e2f565b9250506020610eaf85828601610c34565b9150509250929050565b610ec281610c13565b82525050565b6000602082019050610edd6000830184610eb9565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f0e82610ee3565b9050919050565b610f1e81610f03565b8114610f2957600080fd5b50565b600081359050610f3b81610f15565b92915050565b600060208284031215610f5757610f56610c09565b5b6000610f6584828501610f2c565b91505092915050565b60008060408385031215610f8557610f84610c09565b5b6000610f9385828601610f2c565b9250506020610fa485828601610c34565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fe381610c13565b82525050565b600082825260208201905092915050565b600061100582610c76565b61100f8185610fe9565b935061101f818560208601610c92565b61102881610cbc565b840191505092915050565b600060608301600083015161104b6000860182610fda565b50602083015184820360208601526110638282610ffa565b91505060408301516110786040860182610fda565b508091505092915050565b600061108f8383611033565b905092915050565b6000602082019050919050565b60006110af82610fae565b6110b98185610fb9565b9350836020820285016110cb85610fca565b8060005b8581101561110757848403895281516110e88582611083565b94506110f383611097565b925060208a019950506001810190506110cf565b50829750879550505050505092915050565b6000602082019050818103600083015261113381846110a4565b905092915050565b60006060820190506111506000830186610eb9565b81810360208301526111628185610ccd565b90506111716040830184610eb9565b949350505050565b61118281610f03565b82525050565b600060208201905061119d6000830184611179565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f596f7520646f6e2774206861766520656e6f75676820546f6b656e7300000000600082015250565b6000611208601c83610c81565b9150611213826111d2565b602082019050919050565b60006020820190508181036000830152611237816111fb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061127882610c13565b915061128383610c13565b925082820390508181111561129b5761129a61123e565b5b92915050565b60006112ac82610c13565b91506112b783610c13565b92508282019050808211156112cf576112ce61123e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061131c57607f821691505b60208210810361132f5761132e6112d5565b5b50919050565b7f596f7520617265206e6f7420746865204f776e65720000000000000000000000600082015250565b600061136b601583610c81565b915061137682611335565b602082019050919050565b6000602082019050818103600083015261139a8161135e565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026114037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826113c6565b61140d86836113c6565b95508019841693508086168417925050509392505050565b6000819050919050565b600061144a61144561144084610c13565b611425565b610c13565b9050919050565b6000819050919050565b6114648361142f565b61147861147082611451565b8484546113d3565b825550505050565b600090565b61148d611480565b61149881848461145b565b505050565b5b818110156114bc576114b1600082611485565b60018101905061149e565b5050565b601f821115611501576114d2816113a1565b6114db846113b6565b810160208510156114ea578190505b6114fe6114f6856113b6565b83018261149d565b50505b505050565b600082821c905092915050565b600061152460001984600802611506565b1980831691505092915050565b600061153d8383611513565b9150826002028217905092915050565b61155682610c76565b67ffffffffffffffff81111561156f5761156e610d32565b5b6115798254611304565b6115848282856114c0565b600060209050601f8311600181146115b757600084156115a5578287015190505b6115af8582611531565b865550611617565b601f1984166115c5866113a1565b60005b828110156115ed578489015182556001820191506020850194506020810190506115c8565b8683101561160a5784890151611606601f891682611513565b8355505b6001600288020188555050505b505050505050565b7f596f7520646f6e2774206861766520656e6f75676820746f6b656e7320746f2060008201527f6275726e00000000000000000000000000000000000000000000000000000000602082015250565b600061167b602483610c81565b91506116868261161f565b604082019050919050565b600060208201905081810360008301526116aa8161166e565b9050919050565b7f596f7520646f6e2774206861766520656e6f75676820746f6b656e7320746f2060008201527f7472616e73666572000000000000000000000000000000000000000000000000602082015250565b600061170d602883610c81565b9150611718826116b1565b604082019050919050565b6000602082019050818103600083015261173c81611700565b905091905056fea264697066735822122071cec21616efe19d1ae3062e4e44a55caf9ad8214e75ecbc72205a66b44574f964736f6c63430008120033";

type Aval_20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Aval_20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Aval_20__factory extends ContractFactory {
  constructor(...args: Aval_20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _symbol, _owner, overrides || {});
  }
  override deploy(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, _owner, overrides || {}) as Promise<
      Aval_20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Aval_20__factory {
    return super.connect(runner) as Aval_20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Aval_20Interface {
    return new Interface(_abi) as Aval_20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): Aval_20 {
    return new Contract(address, _abi, runner) as unknown as Aval_20;
  }
}
